<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>