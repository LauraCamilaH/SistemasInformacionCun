<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        wszeyh/+8P+N8G2MtppLCQAAAABJRU5ErkJggg==
</value>
  </data>
</root>